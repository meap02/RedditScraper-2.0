# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\RSV2.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_main_win(object):
    def setupUi(self, main_win):
        main_win.setObjectName("main_win")
        main_win.resize(1000, 600)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred
        )
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(main_win.sizePolicy().hasHeightForWidth())
        main_win.setSizePolicy(sizePolicy)
        main_win.setMinimumSize(QtCore.QSize(1000, 600))
        main_win.setMaximumSize(QtCore.QSize(1000, 600))
        main_win.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.centralwidget = QtWidgets.QWidget(main_win)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.MinimumExpanding,
            QtWidgets.QSizePolicy.MinimumExpanding,
        )
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.centralwidget.sizePolicy().hasHeightForWidth()
        )
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.centralwidget.setObjectName("centralwidget")
        self.Title = QtWidgets.QLabel(self.centralwidget)
        self.Title.setGeometry(QtCore.QRect(270, 0, 391, 91))
        font = QtGui.QFont()
        font.setFamily("Orbitron")
        font.setPointSize(21)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.Title.setFont(font)
        self.Title.setToolTip("")
        self.Title.setAlignment(QtCore.Qt.AlignCenter)
        self.Title.setObjectName("Title")
        self.log = QtWidgets.QTextBrowser(self.centralwidget)
        self.log.setGeometry(QtCore.QRect(50, 300, 901, 191))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed
        )
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.log.sizePolicy().hasHeightForWidth())
        self.log.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Consolas")
        self.log.setFont(font)
        self.log.setSizeAdjustPolicy(
            QtWidgets.QAbstractScrollArea.AdjustIgnored
        )
        self.log.setLineWrapMode(QtWidgets.QTextEdit.NoWrap)
        self.log.setObjectName("log")
        self.saving_progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.saving_progressBar.setEnabled(True)
        self.saving_progressBar.setGeometry(QtCore.QRect(50, 520, 931, 21))
        self.saving_progressBar.setProperty("value", 0)
        self.saving_progressBar.setTextVisible(True)
        self.saving_progressBar.setInvertedAppearance(False)
        self.saving_progressBar.setObjectName("saving_progressBar")
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(10, 80, 961, 219))
        self.layoutWidget.setObjectName("layoutWidget")
        self.button_grid = QtWidgets.QGridLayout(self.layoutWidget)
        self.button_grid.setSizeConstraint(
            QtWidgets.QLayout.SetDefaultConstraint
        )
        self.button_grid.setContentsMargins(0, 0, 0, 0)
        self.button_grid.setObjectName("button_grid")
        self.install_location_label = QtWidgets.QLabel(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed
        )
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.install_location_label.sizePolicy().hasHeightForWidth()
        )
        self.install_location_label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(6)
        font.setItalic(True)
        self.install_location_label.setFont(font)
        self.install_location_label.setAlignment(
            QtCore.Qt.AlignRight
            | QtCore.Qt.AlignTrailing
            | QtCore.Qt.AlignVCenter
        )
        self.install_location_label.setIndent(-20)
        self.install_location_label.setObjectName("install_location_label")
        self.button_grid.addWidget(self.install_location_label, 1, 4, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(
            20,
            40,
            QtWidgets.QSizePolicy.Minimum,
            QtWidgets.QSizePolicy.Expanding,
        )
        self.button_grid.addItem(spacerItem, 5, 4, 1, 1)
        self.collectBtn = QtWidgets.QPushButton(self.layoutWidget)
        self.collectBtn.setObjectName("collectBtn")
        self.button_grid.addWidget(self.collectBtn, 7, 3, 1, 1)
        self.fetch_spinBox = QtWidgets.QSpinBox(self.layoutWidget)
        self.fetch_spinBox.setButtonSymbols(
            QtWidgets.QAbstractSpinBox.PlusMinus
        )
        self.fetch_spinBox.setMinimum(1)
        self.fetch_spinBox.setMaximum(1000)
        self.fetch_spinBox.setObjectName("fetch_spinBox")
        self.button_grid.addWidget(self.fetch_spinBox, 6, 3, 1, 1)
        self.fetchtype_comboBox = QtWidgets.QComboBox(self.layoutWidget)
        self.fetchtype_comboBox.setObjectName("fetchtype_comboBox")
        self.fetchtype_comboBox.addItem("")
        self.fetchtype_comboBox.addItem("")
        self.fetchtype_comboBox.addItem("")
        self.fetchtype_comboBox.addItem("")
        self.button_grid.addWidget(self.fetchtype_comboBox, 2, 3, 1, 1)
        self.seachSubs_checkBox = QtWidgets.QCheckBox(self.layoutWidget)
        self.seachSubs_checkBox.setObjectName("seachSubs_checkBox")
        self.button_grid.addWidget(self.seachSubs_checkBox, 4, 4, 1, 1)
        self.content_comboBox = QtWidgets.QComboBox(self.layoutWidget)
        self.content_comboBox.setObjectName("content_comboBox")
        self.content_comboBox.addItem("")
        self.content_comboBox.addItem("")
        self.button_grid.addWidget(self.content_comboBox, 2, 2, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(
            375,
            20,
            QtWidgets.QSizePolicy.Maximum,
            QtWidgets.QSizePolicy.Minimum,
        )
        self.button_grid.addItem(spacerItem1, 3, 0, 1, 1)
        self.fetch_label = QtWidgets.QLabel(self.layoutWidget)
        self.fetch_label.setObjectName("fetch_label")
        self.button_grid.addWidget(self.fetch_label, 6, 2, 1, 1)
        self.history_checkBox = QtWidgets.QCheckBox(self.layoutWidget)
        self.history_checkBox.setTristate(False)
        self.history_checkBox.setObjectName("history_checkBox")
        self.button_grid.addWidget(self.history_checkBox, 3, 4, 1, 1)
        self.fetchMax_checkBox = QtWidgets.QCheckBox(self.layoutWidget)
        self.fetchMax_checkBox.setChecked(False)
        self.fetchMax_checkBox.setTristate(False)
        self.fetchMax_checkBox.setObjectName("fetchMax_checkBox")
        self.button_grid.addWidget(self.fetchMax_checkBox, 6, 4, 1, 1)
        self.input_tabWidget = QtWidgets.QTabWidget(self.layoutWidget)
        self.input_tabWidget.setObjectName("input_tabWidget")
        self.search_tab = QtWidgets.QWidget()
        self.search_tab.setObjectName("search_tab")
        self.input_plainTextEdit = QtWidgets.QPlainTextEdit(self.search_tab)
        self.input_plainTextEdit.setGeometry(QtCore.QRect(0, 0, 381, 25))
        self.input_plainTextEdit.setMaximumSize(QtCore.QSize(16777215, 25))
        self.input_plainTextEdit.setObjectName("input_plainTextEdit")
        self.input_tabWidget.addTab(self.search_tab, "")
        self.history_tab = QtWidgets.QWidget()
        self.history_tab.setObjectName("history_tab")
        self.input_comboBox = QtWidgets.QComboBox(self.history_tab)
        self.input_comboBox.setGeometry(QtCore.QRect(0, 0, 381, 22))
        self.input_comboBox.setObjectName("input_comboBox")
        self.input_comboBox.addItem("")
        self.input_tabWidget.addTab(self.history_tab, "")
        self.button_grid.addWidget(self.input_tabWidget, 2, 4, 1, 1)
        main_win.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(main_win)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1000, 22))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        self.menuOpen_User_Data = QtWidgets.QMenu(self.menuView)
        self.menuOpen_User_Data.setObjectName("menuOpen_User_Data")
        self.menuTools = QtWidgets.QMenu(self.menubar)
        self.menuTools.setObjectName("menuTools")
        main_win.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(main_win)
        self.statusbar.setSizeGripEnabled(True)
        self.statusbar.setObjectName("statusbar")
        main_win.setStatusBar(self.statusbar)
        self.actionChange_Install_Location = QtWidgets.QAction(main_win)
        self.actionChange_Install_Location.setObjectName(
            "actionChange_Install_Location"
        )
        self.actionDelete_User_Data = QtWidgets.QAction(main_win)
        self.actionDelete_User_Data.setObjectName("actionDelete_User_Data")
        self.actionAdd_Taks_to_Windows_Scheduler = QtWidgets.QAction(main_win)
        self.actionAdd_Taks_to_Windows_Scheduler.setObjectName(
            "actionAdd_Taks_to_Windows_Scheduler"
        )
        self.actionChange_Reddit_Token_Credentials = QtWidgets.QAction(
            main_win
        )
        self.actionChange_Reddit_Token_Credentials.setObjectName(
            "actionChange_Reddit_Token_Credentials"
        )
        self.actionbuild_user = QtWidgets.QAction(main_win)
        self.actionbuild_user.setObjectName("actionbuild_user")
        self.menuFile.addAction(self.actionChange_Install_Location)
        self.menuFile.addAction(self.actionChange_Reddit_Token_Credentials)
        self.menuEdit.addAction(self.actionDelete_User_Data)
        self.menuOpen_User_Data.addAction(self.actionbuild_user)
        self.menuView.addAction(self.menuOpen_User_Data.menuAction())
        self.menuTools.addAction(self.actionAdd_Taks_to_Windows_Scheduler)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())

        self.retranslateUi(main_win)
        self.content_comboBox.setCurrentIndex(0)
        self.input_tabWidget.setCurrentIndex(1)
        self.fetchMax_checkBox.toggled["bool"].connect(self.fetch_spinBox.setDisabled)  # type: ignore
        QtCore.QMetaObject.connectSlotsByName(main_win)

    def retranslateUi(self, main_win):
        _translate = QtCore.QCoreApplication.translate
        main_win.setWindowTitle(_translate("main_win", "RedditScraperV2"))
        self.Title.setText(_translate("main_win", "Reddit Scraper - V2"))
        self.install_location_label.setText(
            _translate("main_win", "InstallLocation")
        )
        self.collectBtn.setText(_translate("main_win", "Collect!"))
        self.fetch_spinBox.setToolTip(
            _translate(
                "main_win",
                "<html><head/><body><p>Limit of posts to fetch from user and subsequent subreddits</p></body></html>",
            )
        )
        self.fetchtype_comboBox.setItemText(0, _translate("main_win", "New"))
        self.fetchtype_comboBox.setItemText(1, _translate("main_win", "Hot"))
        self.fetchtype_comboBox.setItemText(2, _translate("main_win", "Top"))
        self.fetchtype_comboBox.setItemText(
            3, _translate("main_win", "Controversial")
        )
        self.seachSubs_checkBox.setText(
            _translate("main_win", "Search Subreddits")
        )
        self.content_comboBox.setCurrentText(
            _translate("main_win", "Redditor:")
        )
        self.content_comboBox.setItemText(
            0, _translate("main_win", "Redditor:")
        )
        self.content_comboBox.setItemText(
            1, _translate("main_win", "Subreddit:")
        )
        self.fetch_label.setText(_translate("main_win", "Fetch Limit:"))
        self.history_checkBox.setText(
            _translate("main_win", "Load Collected History")
        )
        self.fetchMax_checkBox.setToolTip(
            _translate(
                "main_win",
                "<html><head/><body><p>Enable the max amount of fetched items</p></body></html>",
            )
        )
        self.fetchMax_checkBox.setText(_translate("main_win", "Max"))
        self.input_tabWidget.setTabText(
            self.input_tabWidget.indexOf(self.search_tab),
            _translate("main_win", "Search"),
        )
        self.input_comboBox.setCurrentText(
            _translate("main_win", "Past_Redditor")
        )
        self.input_comboBox.setItemText(
            0, _translate("main_win", "Past_Redditor")
        )
        self.input_tabWidget.setTabText(
            self.input_tabWidget.indexOf(self.history_tab),
            _translate("main_win", "History"),
        )
        self.menuFile.setTitle(_translate("main_win", "File"))
        self.menuEdit.setTitle(_translate("main_win", "Edit"))
        self.menuView.setTitle(_translate("main_win", "View"))
        self.menuOpen_User_Data.setTitle(
            _translate("main_win", "Open User Data")
        )
        self.menuTools.setTitle(_translate("main_win", "Tools"))
        self.actionChange_Install_Location.setText(
            _translate("main_win", "Change Install Location")
        )
        self.actionDelete_User_Data.setText(
            _translate("main_win", "Delete User Data")
        )
        self.actionAdd_Taks_to_Windows_Scheduler.setText(
            _translate("main_win", "Auto-Collect")
        )
        self.actionChange_Reddit_Token_Credentials.setText(
            _translate("main_win", "Change Reddit App Credentials")
        )
        self.actionbuild_user.setText(_translate("main_win", "build_user"))
